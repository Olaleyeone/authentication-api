apply plugin: 'jacoco'

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'CLASS'
            limit {
                minimum = 0.95
            }
            excludes = [
                    'com.olaleyeone.data.entity.Q*',
                    'com.olaleyeone.auth.qualifier.*',
                    'com.olaleyeone.auth.data.entity.Q*',
                    'com.olaleyeone.auth.data.entity.passwordreset.Q*',
                    'com.olaleyeone.auth.data.embeddable.Q*'
            ]
        }
    }
}
check.dependsOn jacocoTestCoverageVerification

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "javax.inject:javax.inject:1"
    implementation "org.apache.commons:commons-lang3:$commonsLang3Version"
    implementation "javax.validation:validation-api:$validationApiVersion"
    implementation "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:$hibernateJpaVersion"

    compileOnly "com.querydsl:querydsl-jpa:${queryDslVersion}"
    annotationProcessor("com.querydsl:querydsl-apt:${queryDslVersion}:jpa")
    annotationProcessor("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    compileOnly "javax.annotation:javax.annotation-api:1.3.2"

    testImplementation(project(":${projectName}-test-starter"))
}